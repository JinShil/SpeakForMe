<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>SpeakForMe</title>

    <style>
        body {
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        #wordButtons {
            display: flex;
            gap: 5px;
            flex-wrap: wrap;
        }

        button {
            border-radius: 5px;
            border-width: 1px;
        }

        .wordButton {
            white-space: nowrap;
        }

        .largeFont {
            font-size: 220%;
        }

        #txt {
            text-align: center;
            padding: 0;
            background-color: #E2E2E2;
            width: 100%;
            height: 1.4em;
            white-space: nowrap;
            border: solid 1px black;
        }

        ::placeholder {
            color: #A0A0A0;
            opacity: 1;
        }
    </style>
  </head>

  <body>
    <div style="display: grid; grid-template-columns: 1fr auto auto; gap: 5px;">
        <input id="txt" class="largeFont" type="text" placeholder="Type here and press &quot;Enter&quot;" />
        <button class="largeFont" style="color: blue;" onclick="inputTxt.value=''">Clear</button>
    </div>

    <div id="wordButtons">
    </div>

    <script>
        const synth = window.speechSynthesis;

        const inputForm = document.querySelector("form");
        const inputTxt = document.querySelector("#txt");
        const wordButtons = document.querySelector("#wordButtons");

        document.body.addEventListener("keypress", (e) =>
        {
            if (e.key == "Enter")
            {
                const text = inputTxt.value.trim();
                
                speak(text);

                inputTxt.select();

                e.preventDefault();
            }
        })

        function speakWord(e) {
            const text = e.target.textContent;
            speak(text);
            e.target.blur();
        }

        function createWords() {
            const words = ["Yes", "No", "I don't know", "Thank you", "I'm in pain", "I'm uncomfortable", "That's good", "Please call 911"
                , "I'm thirsty", "I'm hungry", "I'm tired"];
            
            words.forEach(i => {
                var b = document.createElement("button");
                b.classList.add("wordButton");
                b.classList.add("largeFont");
                b.innerText = i;
                b.addEventListener("click", speakWord);
                wordButtons.appendChild(b);
            });
        }

        let voices = [];
        let voice;

        function populateVoiceList() {
            voices = synth.getVoices();

            // Google Chrome
            voice = voices.find(i => i.name === "Google US English");
                
            if (!voice) {
                // Microsoft Windows
                voice = voices.find(i => i.name.startsWith("Microsoft Zira"))

                // Firefox
                if (!voice) {
                    voice = voices.find(i => i.name.startsWith("English (USA)"))

                    // Everything else
                    if (!voice) {
                        voice = voices[0];
                    }
                }
            }
        }

        createWords();

        populateVoiceList();

        if (speechSynthesis.onvoiceschanged !== undefined) {
            speechSynthesis.onvoiceschanged = populateVoiceList;
        }

        function speak(text) {
            if (voices.length < 1) {
                alert("It appears your browser does not have any voices.  Try installing Google Chrome.");
                return;
            }

            if (synth.speaking) {
                synth.cancel();
            }

            if (text !== "") {
                const utterThis = new SpeechSynthesisUtterance(text);

                utterThis.onend = function (event) {
                    console.log("SpeechSynthesisUtterance.onend");
                };

                utterThis.onerror = function (event) {
                    console.log("SpeechSynthesisUtterance.onerror");
                };

                utterThis.voice = voice;
                
                synth.speak(utterThis);
            }
        }
    </script>
  </body>
</html>